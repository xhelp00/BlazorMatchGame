@page "/"

<PageTitle>BlazorMatchGame</PageTitle>

<style>
    .container
    {
        width: 400px;
    }
    button
    {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var animalNumber = 0; animalNumber < shuffled.Count; animalNumber++)
         {
                var animal = shuffled[animalNumber];
                var uniqueDescription = $"Button #{animalNumber}";

              <div class="col-3">
                   <button @onclick="@(() => ButtonClick(animal, uniqueDescription))"
                           type="button" class="btn btn-outline-dark" >
                        <h1>@animal</h1>
                   </button>
              </div>
         }
    </div>
</div>

@code
{
    List<string> animalEmoji = new List<string>()
    {
        "🐶", "🐶",
        "🐺", "🐺",
        "🦊", "🦊",
        "🐰", "🐰",
        "🐷", "🐷",
        "🐻", "🐻",
        "🐨", "🐨",
        "🐯", "🐯",
    };

    List<string> shuffled = new List<string>();
    protected override void OnInitialized()
    {
        SetUpGame();
    }

    private void SetUpGame()
    {
        Random random = new Random();
        shuffled = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            //first selected of the pair
            lastAnimalFound = animal;
            lastDescription = animalDescription;
        }
        else if ((lastAnimalFound == animal) && (animalDescription != lastDescription))
        {
            //match found, reset selection
            lastAnimalFound = string.Empty;
            //replace found animals by empty string
            shuffled = shuffled
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
        }
        else
        {
            //second selected but not matching, reset selection
            lastAnimalFound = string.Empty;
        }
    }
}